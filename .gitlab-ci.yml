# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Nodejs.gitlab-ci.yml

# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
#image: node:16.13.0
default:
  tags:
    - aws-linux

image: sleavely/node-awscli:14.x

stages:
  - build
  - test
  - deploy

variables:
  RULES_CHANGES_PATH: '**/*'

.base-rules:
  rules:
    - if: $CI_COMMIT_BRANCH == "JOBS-903_feature_signin"
      when: always
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - $RULES_CHANGES_PATH
    - when: manual
      allow_failure: true

.logapp:
  variables:
    RULES_CHANGES_PATH: 'apps/category/*'

logapp-deploy-dev:
  stage: deploy
  extends: .category
  before_script:
    - npm config set prefix /usr/local
    - npm install -g serverless
  script:
    - aws configure list
    - chmod 777 ./build.sh
    - yarn install
    - yarn  deploy
    - cd dist
    - zip -r dist.zip .
    - cd ../infrastructure
    - sls deploy --stage develop --verbose
  only:
    - develop
  environment:
    name: development

logapp-deploy-hml:
  stage: deploy
  extends: .category
  before_script:
    - npm config set prefix /usr/local
    - npm install -g serverless
  script:
    - aws configure list
    - chmod 777 ./build.sh
    - yarn install
    - yarn  deploy
    - cd dist
    - zip -r dist.zip .
    - cd ../infrastructure
    - sls deploy --stage staging --verbose
  only:
    - release
  environment:
    name: release

logapp-deploy-prd:
  stage: deploy
  extends: .category
  before_script:
    - npm config set prefix /usr/local
    - npm install -g serverless
  script:
    - aws configure list
    - chmod 777 ./build.sh
    - yarn install
    - yarn  deploy
    - cd dist
    - zip -r dist.zip .
    - cd ../infrastructure
    - sls deploy --stage production --verbose
  only:
    - main
  environment:
    name: production